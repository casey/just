name: Container Image

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., 1.42.4)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  container:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          VERSION="${{ github.event.release.tag_name }}"
        else
          VERSION="${{ inputs.version }}"
        fi
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "Building container for version: ${VERSION}"

    - name: 'Find the latest release tag (determined by semver sort)'
      id: latest-semver
      if: github.event_name == 'release'
      env:
        # Filter for semver tags (Ignores pre-release tags)
        TAG_FILTER: '^refs/tags/[0-9]+(\.[0-9]+){2}$'
        TAG_REF: ${{ steps.version.outputs.version }}
      shell: bash
      run: |
        TAG=$(
          git ls-remote --exit-code --refs --tags --sort='-v:refname' origin \
          | awk '{print $2}' | grep -E "${TAG_FILTER}" | head -n 1
        )
        echo "latest-tag=${TAG#refs/tags/}" >> "${GITHUB_OUTPUT}"
        echo "Latest semver tag found: ${TAG#refs/tags/}"

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      env:
        is-latest: ${{ steps.version.outputs.version == steps.latest-semver.outputs.latest-tag }}
        is-not-major-zero-ver: ${{ !startsWith(steps.version.outputs.version, '0.') }}
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        # WORKAROUND: Prevents accidentally overwriting `latest` + semver tags
        # https://github.com/docker/metadata-action/issues/461#issuecomment-2686558629
        flavor: |
          latest=false
        tags: |
          type=semver,pattern={{version}},value=${{ steps.version.outputs.version }}
          type=semver,pattern={{major}}.{{minor}},value=${{ steps.version.outputs.version }},enable={{is_default_branch}}
          type=semver,pattern={{major}},value=${{ steps.version.outputs.version }},enable=${{ fromJSON(env.is-latest) && fromJSON(env.is-not-major-zero-ver) }}
          type=raw,value=latest,enable=${{ env.is-latest }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          JUST_VERSION=${{ steps.version.outputs.version }}